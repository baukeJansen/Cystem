@using Website.Common.Viewmodels
@using Website.Common.Models.EAV
@using Website.Common.Enums
@using Attribute = Website.Common.Models.EAV.Attribute
@using ValueType = Website.Common.Enums.ValueType
@model GenericViewModel
@inject IValueHelper Value

<div class="input-field col s12">
    @{
        Attribute attribute = Model.Value.RelatedAttribute;
        Value source = Model.Value.RelatedValue;

        if (source != null)
        {
            Model.Value.Int = source.Int;
            Model.Value.String = source.String;
            Model.Value.SerializedString = source.SerializedString;
        }

        Value settings = Value.Get(Model, "Settings");
    }

    @if (settings != null)
    {
        @if (source != null)
        {
            @Html.Hidden(settings.String + ".Id", Model.Value.RelatedValue.Id)
        }

        @Html.Hidden(settings.String + ".AttributeId", attribute.Id)
        @Html.Hidden(settings.String + ".Type", attribute.Type)

        @switch (attribute.Type)
        {
            case ValueType.IntValue:
                @Html.TextBox(settings.String + ".Int", source != null ? source.Int : null, new { @type = "number" })
                @Html.Label(settings.String + ".Int", attribute.Label)
                break;

            case ValueType.StringValue:
                @Html.TextBox(settings.String + ".String", source != null ? source.String : null)
                @Html.Label(settings.String + ".String", attribute.Label)
                break;

            case ValueType.SerializedStringValue:
                @Html.TextBox(settings.String + ".SerializedString", source != null ? source.SerializedString : null)
                @Html.Label(settings.String + ".SerializedString", attribute.Label)
                break;
        }
    }
</div>