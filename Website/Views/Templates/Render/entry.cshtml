@using Website.Common.Viewmodels
@using Website.Common.Models
@using ValueType = Website.Common.Enums.ValueType
@model GenericViewModel
@inject IValueHelper Value

@{
    Value settings = Value.Get(Model, "Settings");
    Value template = Value.Get(Model, "Template");
    List<Value> attributes = Value.GetAll(Model.Value.Values, ValueType.RelatedAttribute);

    string Name = settings?.String;
    int i = 0;
}

@if (Model.Value.Type == ValueType.RelatedAttribute)
{
    Model.Value.Values.Remove(template);
}

@await Render.Value(Model)

@if (attributes != null && settings != null)
{
    @for (; i < attributes.Count; i++)
    {
        Value attribute = attributes[i];

        if (attribute.Values == null)
        {
            attribute.Values = new List<Value>();
        }

        settings.String = Name + ".Values[" + i + "]";

        attribute.Values.Add(settings);
        attribute.Values.Add(template);
        @await Render.Value(attribute, Model.Options);
        settings.String = Name;
    }
}

@if (settings != null)
{
    settings.Int = i;
}